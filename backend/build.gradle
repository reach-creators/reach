import org.openapitools.generator.gradle.plugin.tasks.ValidateTask

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '7.14.0'
    id 'com.diffplug.spotless' version '7.0.4'
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    // Main
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
    implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.projectlombok:lombok'

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootRun {
    systemProperties.put('spring.datasource.password', env.DATABASE_PASSWORD.value)
}

spotless {
    enforceCheck = false

    // Java Formatting
    java {
        googleJavaFormat('1.27.0') // Use the latest compatible version

        target 'src/*/java/**/*.java'
        targetExclude "${layout.buildDirectory.get()}/generated/**/*.java" // Exclude files generated by openapi-generator
    }
}

openApiGenerate {
    // ---------------------------------------------------------------------------------------------
    // Basic Configuration
    // ---------------------------------------------------------------------------------------------

    generatorName.set("spring")
    inputSpec.set("${projectDir}/src/main/resources/openapi.yaml")
    outputDir.set("${layout.buildDirectory.get()}/generated")
    apiPackage.set("com.example.reach.backend.api")
    modelPackage.set("com.example.reach.backend.dto")
    skipValidateSpec.set(false)

    // ---------------------------------------------------------------------------------------------
    configOptions.set([
            'sourceFolder'           : 'src/main/java',
            'dateLibrary'            : 'java8',
            'interfaceOnly'          : 'true',
            'delegatePattern'        : 'false',
            'useSpringBoot3'         : 'true',
            'useBeanValidation'      : 'true',
            'useTags'                : 'true',
            'openApiNullable'        : 'false',
            'generateApiTests'       : 'false',
            'generateApiPom'         : 'false',
            'generatePom'            : 'false',
            'generateSupportingFiles': 'false',
            'artifactVersion'        : '0.0.1-SNAPSHOT',
            'useLombok'              : 'true',
    ])
    modelNameSuffix.set("Dto")
}

sourceSets {
    main {
        java {
            srcDirs += "${buildDir}/generated/${openApiGenerate.configOptions.get().sourceFolder}"
        }
    }
}

tasks.named('compileJava') {
    dependsOn tasks.openApiGenerate
}

tasks.register('openApiValidateSpec', ValidateTask) {
    inputSpec.set(file("${projectDir}/src/main/resources/openapi.yaml").absolutePath)
}
